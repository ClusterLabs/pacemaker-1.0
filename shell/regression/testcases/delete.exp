.TRY Delete/Rename test
.INP: configure
.INP: # erase to start from scratch
.INP: erase
.INP: erase nodes
.INP: # create one stonith so that verify does not complain
.INP: primitive st stonith:ssh
.INP: primitive d1 ocf:heartbeat:Dummy
.INP: primitive d2 ocf:heartbeat:Dummy
.INP: location d1-pref d1 100: node1
.INP: show
primitive st stonith:ssh
primitive d1 ocf:heartbeat:Dummy
primitive d2 ocf:heartbeat:Dummy
location d1-pref d1 100: node1
.INP: _test
.INP: rename d1 p1
.INP: show
primitive st stonith:ssh
primitive p1 ocf:heartbeat:Dummy
primitive d2 ocf:heartbeat:Dummy
location d1-pref p1 100: node1
.INP: # delete primitive
.INP: delete d2
.INP: _test
.INP: show
primitive st stonith:ssh
primitive p1 ocf:heartbeat:Dummy
location d1-pref p1 100: node1
.INP: # delete primitive with constraint
.INP: delete p1
.INP: _test
.INP: show
primitive st stonith:ssh
.INP: primitive d1 ocf:heartbeat:Dummy
.INP: location d1-pref d1 100: node1
.INP: _test
.INP: # delete primitive belonging to a group
.INP: primitive d2 ocf:heartbeat:Dummy
.INP: _test
.INP: group g1 d2 d1
.INP: delete d2
.INP: show
primitive st stonith:ssh
primitive d1 ocf:heartbeat:Dummy
group g1 d1
location d1-pref g1 100: node1
.INP: _test
.INP: delete g1
.INP: show
primitive st stonith:ssh
primitive d1 ocf:heartbeat:Dummy
.INP: verify
.INP: # delete a group which is in a clone
.INP: primitive d2 ocf:heartbeat:Dummy
.INP: group g1 d2 d1
.INP: clone c1 g1
.INP: delete g1
.INP: show
primitive st stonith:ssh
primitive d1 ocf:heartbeat:Dummy
primitive d2 ocf:heartbeat:Dummy
.INP: _test
.INP: group g1 d2 d1
.INP: clone c1 g1
.INP: _test
.INP: # delete group from a clone (again)
.INP: delete g1
.INP: show
primitive st stonith:ssh
primitive d1 ocf:heartbeat:Dummy
primitive d2 ocf:heartbeat:Dummy
.INP: _test
.INP: group g1 d2 d1
.INP: clone c1 g1
.INP: # delete primitive and its group and their clone
.INP: delete d2 d1 c1 g1
.INP: show
primitive st stonith:ssh
.INP: _test
.INP: # verify
.INP: verify
.INP: commit
