diff -ru heartbeat-2.0.1/configure.in heartbeat-2.0.1.openssl/configure.in
--- a/configure.in	2005-09-05 19:27:35.000000000 +0900
+++ b/configure.in	2005-09-15 15:36:30.000000000 +0900
@@ -814,14 +814,12 @@
 AC_CHECK_HEADERS(linux/icmpv6.h,[],[],[#include <asm/types.h>])
 AM_CONDITIONAL(USE_IPV6ADDR, test "$ac_cv_header_linux_icmpv6_h" = yes -a $new_libnet = yes )
 AC_CHECK_HEADERS(libxml/xpath.h)
-AC_CHECK_HEADERS(openssl/md5.h)
 
 dnl
 dnl	Could check for the libraries, but if you have the headers,
 dnl	you're a dolt for not having installed the libs ;-)
 dnl
 AM_CONDITIONAL(USE_VACM, test "$ac_cv_header_vacmclient_api_h" = yes)
-AM_CONDITIONAL(USE_DRAC3, test "$ac_cv_header_curl_curl_h" = yes -a "$ac_cv_header_libxml_xpath_h" = yes -a "$ac_cv_header_openssl_md5_h" = yes)
 
 dnl
 dnl    SNMP checks
diff -ru heartbeat-2.0.1/lib/plugins/stonith/Makefile.am heartbeat-2.0.1.openssl/lib/plugins/stonith/Makefile.am
--- heartbeat-2.0.1/lib/plugins/stonith/Makefile.am	2005-08-17 02:03:52.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/Makefile.am	2005-09-15 15:39:47.000000000 +0900
@@ -37,7 +37,7 @@
 			-DLOCALEDIR='"@LOCALE@"' 		
 
 
-EXTRA_DIST = README.meatware README.rcd_serial README.vacm README.drac3 README.ipmilan
+EXTRA_DIST = README.meatware README.rcd_serial README.vacm README.ipmilan
 
 #
 #       We need "vacmclient_api.h" and -lvacmclient to make the VACM
@@ -68,17 +68,6 @@
 OPENIPMI_LIB =
 ipmilan_LIB =
 endif
-#
-#       We need <curl/curl.h>, <libxml/xmlmemory.h>, 
-#       <libxml/parser.h>, <libxml/xpath.h>, 
-#       <openssl/bio.h>, <openssl/evp.h>, <openssl/md5.h>, 
-#       -lcurl, -lxml2 and -lssl for the drac3 plugin to work
-#
-if USE_DRAC3
-drac3_LIB = drac3.la
-else
-drac3_LIB =
-endif
 
 noinst_PROGRAMS = $(ipmilan_TEST)
 ipmilantest_SOURCES = ipmilan_test.c 
@@ -96,7 +85,6 @@
 			apcsmart.la		\
 			baytech.la		\
 			cyclades.la		\
-			$(drac3_LIB)		\
 			external.la		\
 			ibmhmc.la		\
 			$(ipmilan_LIB)		\
@@ -131,9 +119,6 @@
 cyclades_la_LDFLAGS	= -export-dynamic -module -avoid-version
 cyclades_la_LIBADD	= $(GLIBLIB)
 
-drac3_la_SOURCES	= drac3.c drac3_command.c drac3_command.h drac3_hash.c drac3_hash.h	$(INCFILES)
-drac3_la_LDFLAGS	= -export-dynamic -module -avoid-version -lcurl -lxml2 -lssl $(GLIBLIB)
-
 external_la_SOURCES	= external.c	$(INCFILES)
 external_la_LDFLAGS	= -export-dynamic -module -avoid-version
 external_la_LIBADD	= $(top_builddir)/replace/libreplace.la
diff -ru heartbeat-2.0.1/lib/plugins/stonith/README.drac3 heartbeat-2.0.1.openssl/lib/plugins/stonith/README.drac3
--- heartbeat-2.0.1/lib/plugins/stonith/README.drac3	2003-05-01 06:31:18.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/README.drac3	2005-09-15 15:45:27.000000000 +0900
@@ -1,18 +1,8 @@
-Stonith module for Dell DRACIII remote access card
---------------------------------------------------
-
-This module uses the Dell DRACIII PCI card as a stonith device.
-It sends the XML commands over HTTPS to the DRACIII web server. 
-
-The card firmware must be version 2.0 at least, with support for SSL based
-service and many bug fixes over 1.x versions.
-
-This module uses libcurl, libxml2 (gnome xml libs) and libssl.
-
-Any hints, bug reports, improvements, etc. will be apreciated.
-
----
-Roberto Moreda <moreda@alfa21.com>    http://www.alfa21.com
-Alfa21                                     A Coruña (Spain)
-UNIX, Linux & TCP/IP Services - High Availability Solutions
+REMOVED from Debian because of Openssl Licencing problems.
+Will be readded soon.
+See:
+ http://www.osdl.org/developer_bugzilla/show_bug.cgi?id=853
+ http://lists.community.tummy.com/pipermail/linux-ha-dev/2005-August/011266.html
+ http://www.gnome.org/~markmc/openssl-and-the-gpl.html
 
+Horms -- August 2005
diff -ru heartbeat-2.0.1/lib/plugins/stonith/drac3.c heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3.c
--- heartbeat-2.0.1/lib/plugins/stonith/drac3.c	2005-04-21 05:18:16.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3.c	2005-09-15 15:45:27.000000000 +0900
@@ -1,359 +1,8 @@
-/* $Id: 01-no-drac3.patch,v 1.1 2005/09/16 08:12:07 horms Exp $ */
-/*
- * Stonith module for Dell DRACIII (Dell Remote Access Card)
- *
- * Copyright (C) 2003 Alfa21 Outsourcing
- * Copyright (C) 2003 Roberto Moreda <moreda@alfa21.com>
- * Tiny bits Copyright 2005 International Business Machines
- * Significantly Mangled by Sun Jiang Dong <sunjd@cn.ibm.com>, IBM, 2005
- *
- * (Using snippets of other stonith modules code)
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- * 
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- * 
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
- */
+REMOVED from Debian because of Openssl Licencing problems.
+Will be readded soon.
+See:
+ http://www.osdl.org/developer_bugzilla/show_bug.cgi?id=853
+ http://lists.community.tummy.com/pipermail/linux-ha-dev/2005-August/011266.html
+ http://www.gnome.org/~markmc/openssl-and-the-gpl.html
 
-#define DEVICE  "Dell DRACIII Card"
-#include "stonith_plugin_common.h"
-
-#include <curl/curl.h>
-#include "drac3_command.h"
-
-#define PIL_PLUGIN              drac3
-#define PIL_PLUGIN_S            "drac3"
-#define PIL_PLUGINLICENSE       LICENSE_LGPL
-#define PIL_PLUGINLICENSEURL    URL_LGPL
-#include <pils/plugin.h>
-#include "stonith_signal.h"
-
-static StonithPlugin *	drac3_new(const char *);
-static void	drac3_destroy(StonithPlugin *);
-static const char ** drac3_get_confignames(StonithPlugin *);
-static int	drac3_set_config(StonithPlugin *, StonithNVpair *);
-static const char * drac3_getinfo(StonithPlugin * s, int InfoType);
-static int	drac3_status(StonithPlugin * );
-static int	drac3_reset_req(StonithPlugin * s, int request, const char * host);
-static char **	drac3_hostlist(StonithPlugin  *);
-
-static struct stonith_ops drac3Ops ={
-	drac3_new,		/* Create new STONITH object	*/
-	drac3_destroy,		/* Destroy STONITH object	*/
-	drac3_getinfo,		/* Return STONITH info string	*/
-	drac3_get_confignames,	/* Return configuration parameters */
-	drac3_set_config,	/* Set configuration */
-	drac3_status,		/* Return STONITH device status	*/
-	drac3_reset_req,	/* Request a reset */
-	drac3_hostlist,		/* Return list of supported hosts */
-};
-
-PIL_PLUGIN_BOILERPLATE2("1.0", Debug)
-static const PILPluginImports*  PluginImports;
-static PILPlugin*               OurPlugin;
-static PILInterface*		OurInterface;
-static StonithImports*		OurImports;
-static void*			interfprivate;
-
-PIL_rc
-PIL_PLUGIN_INIT(PILPlugin*us, const PILPluginImports* imports);
-
-PIL_rc
-PIL_PLUGIN_INIT(PILPlugin*us, const PILPluginImports* imports)
-{
-	/* Force the compiler to do a little type checking */
-	(void)(PILPluginInitFun)PIL_PLUGIN_INIT;
-
-	PluginImports = imports;
-	OurPlugin = us;
-
-	/* Register ourself as a plugin */
-	imports->register_plugin(us, &OurPIExports);  
-
-	/*  Register our interface implementation */
- 	return imports->register_interface(us, PIL_PLUGINTYPE_S
-	,	PIL_PLUGIN_S
-	,	&drac3Ops
-	,	NULL		/*close */
-	,	&OurInterface
-	,	(void*)&OurImports
-	,	&interfprivate); 
-}
-
-#define BUFLEN	1024
-#define ST_HOST "host"
-
-struct pluginDevice {
-	StonithPlugin sp;
-	const char *pluginid;
-	const char *idinfo;
-	CURL *curl;
-	char *host;
-	char *user;
-	char *pass;
-};
-
-static const char *pluginid = "Dell-DRACIII-Stonith";
-static const char *NOTpluginID = "Dell DRACIII device has been destroyed";
-
-#include "stonith_config_xml.h"
-
-#define XML_HOST_SHORTDESC \
-	XML_PARM_SHORTDESC_BEGIN("en") \
-	ST_HOST \
-	XML_PARM_SHORTDESC_END
-
-#define XML_HOST_LONGDESC \
-	XML_PARM_LONGDESC_BEGIN("en") \
-	"The hostname of the STONITH device" \
-	XML_PARM_LONGDESC_END
-
-#define XML_HOST_PARM \
-	XML_PARAMETER_BEGIN(ST_HOST, "string") \
-	  XML_HOST_SHORTDESC \
-	  XML_HOST_LONGDESC \
-	XML_PARAMETER_END
-
-static const char *drac3XML = 
-  XML_PARAMETERS_BEGIN
-    XML_HOST_PARM
-    XML_LOGIN_PARM
-    XML_PASSWD_PARM
-  XML_PARAMETERS_END;
-
-/* ------------------------------------------------------------------ */
-/* STONITH PLUGIN API                                                 */
-/* ------------------------------------------------------------------ */
-static StonithPlugin *
-drac3_new(const char *subplugin)
-{
-	struct pluginDevice *drac3d = MALLOCT(struct pluginDevice);
-
-	if (drac3d == NULL) {
-			LOG(PIL_CRIT, "out of memory");
-			return(NULL);
-	}
-	memset(drac3d, 0, sizeof(*drac3d));
-	drac3d->pluginid = pluginid;
-	drac3d->curl = NULL;
-	drac3d->host = NULL;
-	drac3d->user = NULL;
-	drac3d->pass = NULL;
-	drac3d->idinfo = DEVICE;
-	drac3d->sp.s_ops = &drac3Ops;
-	return (&(drac3d->sp));
-}
-
-/* ------------------------------------------------------------------ */
-static void
-drac3_destroy(StonithPlugin * s)
-{
-	struct pluginDevice *drac3d;
-
-	VOIDERRIFWRONGDEV(s);
-
-	drac3d = (struct pluginDevice *) s;
-
-	drac3d->pluginid = NOTpluginID;
-
-	/* release curl connection */
-	if (drac3d->curl != NULL) {
-		drac3Logout(drac3d->curl, drac3d->host);
-		curl_easy_cleanup(drac3d->curl);
-		drac3d->curl = NULL;
-	}
-
-	if (drac3d->host != NULL) {
-		FREE(drac3d->host);
-		drac3d->host = NULL;
-	}
-	if (drac3d->user != NULL) {
-		FREE(drac3d->user);
-		drac3d->user = NULL;
-	}
-	if (drac3d->pass != NULL) {
-		FREE(drac3d->pass);
-		drac3d->pass = NULL;
-	}
-
-	/* release stonith-object itself */
-	FREE(drac3d);
-}
-
-/* ------------------------------------------------------------------ */
-static const char **
-drac3_get_confignames(StonithPlugin * s)
-{
-	static const char * ret[] = {ST_HOST, ST_LOGIN, ST_PASSWD, NULL};
-	return ret;
-}
-
-/* ------------------------------------------------------------------ */
-static int
-drac3_set_config(StonithPlugin * s, StonithNVpair * list)
-{
-	struct pluginDevice* sd = (struct pluginDevice *)s;
-	int		rc;
-	StonithNamesToGet	namestocopy [] =
-	{	{ST_HOST,	NULL}
-	,	{ST_LOGIN,	NULL}
-	,	{ST_PASSWD,	NULL}
-	,	{NULL,		NULL}
-	};
-
-	ERRIFWRONGDEV(s, S_OOPS);
-	if (sd->sp.isconfigured) {
-		return S_OOPS;
-	}
-
-	if ((rc=OurImports->CopyAllValues(namestocopy, list)) != S_OK) {
-		return rc;
-	}
-	sd->host = namestocopy[0].s_value;
-	sd->user = namestocopy[1].s_value;
-	sd->pass = namestocopy[2].s_value;
-
-	return(S_OK);
-}
-
-/* ------------------------------------------------------------------ */
-const char *
-drac3_getinfo(StonithPlugin * s, int reqtype)
-{
-	struct pluginDevice *drac3d;
-	const char *ret = NULL;
-
-	ERRIFWRONGDEV(s,NULL);
-
-	drac3d = (struct pluginDevice *) s;
-
-	switch (reqtype) {
-		case ST_DEVICEID:
-			ret = drac3d->idinfo;
-			break;
-		case ST_DEVICENAME:
-			ret = drac3d->host;
-			break;
-		case ST_DEVICEDESCR:
-			ret = "Dell DRACIII (via HTTPS)\n"
-			"The Dell Remote Access Controller accepts XML "
-			"commands over HTTPS";
-			break;
-		case ST_DEVICEURL:
-			ret = "http://www.dell.com/";
-			break;
-		case ST_CONF_XML:		/* XML metadata */
-			ret = drac3XML;
-			break;
-		default:
-			ret = NULL;
-			break;
-	}
-
-	return(ret);
-}
-
-/* ------------------------------------------------------------------ */
-int
-drac3_status(StonithPlugin  *s)
-{
-	struct pluginDevice *drac3d;
-
-	ERRIFNOTCONFIGED(s,S_OOPS);
-
-	drac3d = (struct pluginDevice *) s;
-
-	if (drac3VerifyLogin(drac3d->curl, drac3d->host)) {
-		if (drac3Login(drac3d->curl, drac3d->host,
-		                drac3d->user, drac3d->pass)) {
-		 	LOG(PIL_CRIT, "%s: cannot log into %s at %s", 
-							__FUNCTION__,
-							drac3d->idinfo,
-							drac3d->host);
-		 	return(S_ACCESS);
-		}
-	}
-
-	if (drac3GetSysInfo(drac3d->curl, drac3d->host)) {
-		return(S_ACCESS);
-	}else{
-		return(S_OK);
-	}
-}
-
-/* ------------------------------------------------------------------ */
-int
-drac3_reset_req(StonithPlugin * s, int request, const char *host)
-{
-	struct pluginDevice *drac3d;
-	int rc = S_OK;
-
-	ERRIFNOTCONFIGED(s,S_OOPS);
-
-	drac3d = (struct pluginDevice *) s;
-
-	if (strcasecmp(host, drac3d->host)) {
-		LOG(PIL_CRIT, "%s doesn't control host [%s]"
-		,	drac3d->idinfo, host);
-		return(S_BADHOST);
-	}
-
-	if (drac3VerifyLogin(drac3d->curl, drac3d->host)) {
-		if (drac3Login(drac3d->curl, drac3d->host,
-		                drac3d->user, drac3d->pass)) {
-		 	LOG(PIL_CRIT, "%s: cannot log into %s at %s", 
-							__FUNCTION__,
-							drac3d->idinfo,
-							drac3d->host);
-		 	return(S_ACCESS);
-		}
-	}
-
-	switch(request) {
-#if defined(ST_POWERON) && defined(ST_POWEROFF)
-		case ST_POWERON:
-		case ST_POWEROFF:
-			/* TODO... */
-#endif
-		case ST_GENERIC_RESET:
-			if (drac3PowerCycle(drac3d->curl, drac3d->host))
-				rc = S_ACCESS;
-			break;
-		default:
-			rc = S_INVAL;
-			break;
-	}
-
-	return(rc);
-}
-
-/* ------------------------------------------------------------------ */
-char **
-drac3_hostlist(StonithPlugin * s)
-{
-	struct pluginDevice *drac3d;
-	char **hl;
-
-	ERRIFNOTCONFIGED(s,NULL);
-
-	drac3d = (struct pluginDevice *) s;
-
-	hl = OurImports->StringToHostList(drac3d->host);
-	if (hl == NULL) {
-		LOG(PIL_CRIT, "%s: out of memory", __FUNCTION__);
-	} else {
-		g_strdown(hl[0]);
-	}
-
-	return(hl);
-}
+Horms -- August 2005
diff -ru heartbeat-2.0.1/lib/plugins/stonith/drac3_command.c heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_command.c
--- heartbeat-2.0.1/lib/plugins/stonith/drac3_command.c	2004-09-21 03:42:41.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_command.c	2005-09-15 15:45:27.000000000 +0900
@@ -1,337 +1,8 @@
-/* $Id: 01-no-drac3.patch,v 1.1 2005/09/16 08:12:07 horms Exp $ */
-/*
- * Stonith module for Dell DRACIII (Dell Remote Access Card)
- *
- * Copyright (C) 2003 Alfa21 Outsourcing
- * Copyright (C) 2003 Roberto Moreda <moreda@alfa21.com>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- * 
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- * 
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
- */
-
-#include <portability.h>
-#include <stdio.h>
-#include <string.h>
-#include <sys/types.h>
-
-#include <curl/curl.h>
-
-#include <libxml/xmlmemory.h>
-#include <libxml/parser.h>
-#include <libxml/xpath.h>
-
-#include "drac3_command.h"
-#include "drac3_hash.h"
-
-#define BUFLEN        1024    /* buffer */
-#define SBUFLEN        256    /* small buffer */
-#define MD5LEN          16    /* md5 buffer */
-
-#define DEBUG 		 0
-
-/* Hardcoded XML commands and response codes */
-#define CMD_POWERCYCLE 	"<?XML version=\"1.0\"?><?RMCXML version=\"1.0\"?><RMCSEQ><REQ CMD=\"serveraction\"><ACT>powercycle</ACT></REQ></RMCSEQ>\n"
-#define CMD_GETSYSINFO	"<?XML version=\"1.0\"?><?RMCXML version=\"1.0\"?><RMCSEQ><REQ CMD=\"xml2cli\"><CMDINPUT>getsysinfo -A</CMDINPUT></REQ></RMCSEQ>\n"
-#define RC_OK "0x0\n"
-
-struct Chunk {
-	char *memory;
-	size_t size;
-};
-
-/* prototypes */
-int xmlGetXPathString (const char *str, const char * expr, char * rc, const int len);
-size_t writeFunction (void *ptr, size_t size, size_t nmemb, void *data);
-	
-
-/* ---------------------------------------------------------------------- *
- * XML PARSING                                                            *
- * ---------------------------------------------------------------------- */
- 
-int 
-xmlGetXPathString (const char *str, 
-		   const char * expr, 
-		   char * rc, 
-		   const int len) 
-{	
-    xmlDocPtr doc;
-    xmlNodePtr cur;
-    xmlXPathContextPtr ctx;
-    xmlXPathObjectPtr path; 
-    xmlChar *xmlRC;    
-    
-    doc = xmlParseMemory(str, strlen(str));
-    xmlXPathInit();
-    ctx = xmlXPathNewContext(doc);
-    path = xmlXPathEvalExpression((const xmlChar *)expr, ctx);
-    cur = path->nodesetval->nodeTab[0]; 
-    
-    if (cur != NULL) {
-	xmlRC = xmlNodeListGetString(doc, cur->xmlChildrenNode, 1);
-	snprintf(rc, len, "%s\n", xmlRC);
-	xmlFree(xmlRC);
-	xmlFreeDoc(doc);
-	xmlCleanupParser();
-	xmlXPathFreeObject(path);
-	xmlXPathFreeContext(ctx); 
-	    
-        return(0);
-    } else {
-        fprintf(stderr,"error in obtaining XPath %s\n", expr);
-        xmlFreeDoc(doc);
-	xmlCleanupParser();
-	xmlXPathFreeObject(path);
-	xmlXPathFreeContext(ctx); 
-	
-	rc[0] = 0x00;
-        return(1);
-    }
-}
-
-
-/* ---------------------------------------------------------------------- *
- * CURL CALLBACKS                                                         *
- * ---------------------------------------------------------------------- */
- 
-size_t
-writeFunction (void *ptr, size_t size, size_t nmemb, void *data)
-{
-
-    register int realsize = size * nmemb;
-    struct Chunk *mem = (struct Chunk *)data;
-
-    mem->memory = (char *)realloc(mem->memory, mem->size + realsize + 1);
-    if (mem->memory) {
-        memcpy(&(mem->memory[mem->size]), ptr, realsize);
-        mem->size += realsize;
-        mem->memory[mem->size] = 0;
-    }
-    return realsize;
-}
-
-
-/* ---------------------------------------------------------------------- *
- * DRAC3 CURL COMMANDS                                                    *
- * ---------------------------------------------------------------------- */
- 
-int 
-drac3InitCurl (CURL *curl)
-{
-#ifdef CURLOPT_NOSIGNAL
-    if (curl_easy_setopt(curl, CURLOPT_NOSIGNAL, 1)) return(1);
-#endif
-    if (curl_easy_setopt(curl, CURLOPT_TIMEOUT, 30)) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_VERBOSE, 0)) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, writeFunction)) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_COOKIEFILE, "/dev/null")) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, 0)) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, 0)) return(1);
-    return(0);
-}
-
-int
-drac3Login (CURL *curl, 
-            const char *host,
-	    const char *user,
-	    const char *pass)
-{
-    char url[BUFLEN];
-    char chall[BUFLEN];
-    char token[BUFLEN];
-    char rc[SBUFLEN];
-    int status;
-    struct Chunk chunk;
-    
-    chunk.memory = NULL;
-    chunk.size = 0;
-    if (curl_easy_setopt(curl, CURLOPT_FILE, (void *)&chunk))
-	    return(1);
- 
-    /* ask for challenge */
-    snprintf(url, BUFLEN, "https://%s/cgi/challenge", host);
-    url[BUFLEN-1] = 0x00;
-
-    if (curl_easy_setopt(curl, CURLOPT_URL, url)) 
-	    return(1);
-    if (curl_easy_perform(curl)) 
-	    return(1);
-
-    /* extract challenge */
-    status = xmlGetXPathString(chunk.memory, "//CHALLENGE", chall, BUFLEN);
-    if (status) {
-	    free(chunk.memory);
-	    return(1);
-    }
-    
-    /* calculate authToken */
-    drac3AuthHash(chall, pass, token, BUFLEN);
-
-    if (DEBUG) printf("T: %s\n", token);
-    
-    status = xmlGetXPathString(chunk.memory, "//RC", rc, SBUFLEN);
-    if (status) {
-	    free(chunk.memory);
-	    return(1);
-    }
-
-    if (DEBUG) printf("RC: %s\n", rc);
-
-    status = (strcmp(rc, RC_OK) == 0) ? 0 : 1;	
-    free(chunk.memory);
-    if (status) return(1);
-    chunk.memory = NULL;
-    chunk.size = 0;
-    
-    /* sends authToken */
-    snprintf(url, BUFLEN, "https://%s/cgi/login?user=%s&hash=%s",
-		    host,
-		    user,
-		    token);
-    url[BUFLEN-1] = 0x00;
-    
-    if (curl_easy_setopt(curl, CURLOPT_URL, url))
-	    return(1);
-    if (curl_easy_perform(curl))
-	    return(1);
-    
-    if (DEBUG) printf("R: %s\n", chunk.memory);
-    status = xmlGetXPathString(chunk.memory, "//RC", rc, SBUFLEN);
-    if (status) {
-	    free(chunk.memory);
-	    return(1);
-    }
-    
-    if (DEBUG) printf("RC: %s\n", rc);
-    
-    status = (strcmp(rc, RC_OK) == 0) ? 0 : 1;
-    free(chunk.memory);
-    return(status);
-}
-
-int
-drac3PowerCycle (CURL *curl, 
-		 const char *host)
-{
-    char url[BUFLEN];
-    char cmd[]=CMD_POWERCYCLE;
-    char rc[SBUFLEN];
-    int status;
-    struct Chunk chunk;
-    
-    chunk.memory = NULL;
-    chunk.size = 0;
-    if (curl_easy_setopt(curl, CURLOPT_FILE, (void *)&chunk)) return(1);
-    
-    snprintf(url, BUFLEN, "https://%s/cgi/bin",
-		    host);
-    url[BUFLEN-1] = 0x00;
-    
-    if (curl_easy_setopt(curl, CURLOPT_URL, url)) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_POSTFIELDS, cmd)) return(1);
-    if (curl_easy_perform(curl)) return(1);
-    
-    if (DEBUG) printf("R: %s\n", chunk.memory);
-    status = xmlGetXPathString(chunk.memory, "//RC", rc, SBUFLEN);
-    if (status) {
-	    free(chunk.memory);
-	    return(1);
-    }
- if (DEBUG) printf("RC: %s\n", rc);
-
-    status = (strcmp(rc, RC_OK) == 0) ? 0 : 1;
-    free(chunk.memory);
-    return(status);
-}
-
-
-int
-drac3GetSysInfo (CURL *curl, 
-		 const char *host)
-{
-    char url[BUFLEN];
-    char cmd[]=CMD_GETSYSINFO;
-    char rc[SBUFLEN];
-    int status;
-    struct Chunk chunk;
-    
-    chunk.memory = NULL;
-    chunk.size = 0;
-    if (curl_easy_setopt(curl, CURLOPT_FILE, (void *)&chunk)) return(1);
-    
-    snprintf(url, BUFLEN, "https://%s/cgi/bin",
-		    host);
-    url[BUFLEN-1] = 0x00;
-    
-    if (curl_easy_setopt(curl, CURLOPT_URL, url)) return(1);
-    if (curl_easy_setopt(curl, CURLOPT_POSTFIELDS, cmd)) return(1);
-    if (curl_easy_perform(curl)) return(1);
-    
-    if (DEBUG) printf("R: %s\n", chunk.memory);
-    status = xmlGetXPathString(chunk.memory, "//RC", rc, SBUFLEN);
-    if (status) {
-	    free(chunk.memory);
-	    return(1);
-    }
-     if (DEBUG) printf("RC: %s\n", rc);
-
-    status = (strcmp(rc, RC_OK) == 0) ? 0 : 1;
-    free(chunk.memory);
-    return(status);
-}
- 
-
-int
-drac3Logout (CURL *curl,
-             const char *host)
-{
-    char url[BUFLEN];
-    char rc[SBUFLEN];
-    int status;
-    struct Chunk chunk;
-    
-    chunk.memory = NULL;
-    chunk.size = 0;
-    if (curl_easy_setopt(curl, CURLOPT_FILE, (void *)&chunk)) return(1);
-    
-    snprintf(url, BUFLEN, "https://%s/cgi/logout",
-		    host);
-    url[BUFLEN-1] = 0x00;
-    
-    if (curl_easy_setopt(curl, CURLOPT_URL, url)) return(1);
-    if (curl_easy_perform(curl)) return(1);
-    
-    if (DEBUG) printf("R: %s\n", chunk.memory);
-    status = xmlGetXPathString(chunk.memory, "//RC", rc, SBUFLEN);
-    if (status) {
-	    free(chunk.memory);
-	    return(1);
-    }
-     if (DEBUG) printf("RC: %s\n", rc);
-
-    status = (strcmp(rc, RC_OK) == 0) ? 0 : 1;
-    free(chunk.memory);
-    return(status);
-}
-
-int
-drac3VerifyLogin (CURL *curl,
-		  const char *host)
-{	
-	/*We try to do a GetSysInfo */
-	return(drac3GetSysInfo (curl, host));
-}
-	
-/* -------------------------------------------------------------------- */
+REMOVED from Debian because of Openssl Licencing problems.
+Will be readded soon.
+See:
+ http://www.osdl.org/developer_bugzilla/show_bug.cgi?id=853
+ http://lists.community.tummy.com/pipermail/linux-ha-dev/2005-August/011266.html
+ http://www.gnome.org/~markmc/openssl-and-the-gpl.html
 
+Horms -- August 2005
diff -ru heartbeat-2.0.1/lib/plugins/stonith/drac3_command.h heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_command.h
--- heartbeat-2.0.1/lib/plugins/stonith/drac3_command.h	2004-02-18 07:12:00.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_command.h	2005-09-15 15:45:27.000000000 +0900
@@ -1,30 +1,8 @@
-/* $Id: 01-no-drac3.patch,v 1.1 2005/09/16 08:12:07 horms Exp $ */
-/*
- * Stonith module for Dell DRACIII (Dell Remote Access Card)
- *
- * Copyright (C) 2003 Alfa21 Outsourcing
- * Copyright (C) 2003 Roberto Moreda <moreda@alfa21.com>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- * 
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- * 
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
- */
-
-int drac3InitCurl (CURL *curl);
-int drac3Login (CURL *curl, const char *host, const char *user, const char *pass);
-int drac3PowerCycle (CURL *curl, const char *host);
-int drac3GetSysInfo (CURL *curl, const char *host);
-int drac3Logout (CURL *curl, const char *host);
-int drac3VerifyLogin (CURL *curl, const char *host);
+REMOVED from Debian because of Openssl Licencing problems.
+Will be readded soon.
+See:
+ http://www.osdl.org/developer_bugzilla/show_bug.cgi?id=853
+ http://lists.community.tummy.com/pipermail/linux-ha-dev/2005-August/011266.html
+ http://www.gnome.org/~markmc/openssl-and-the-gpl.html
 
+Horms -- August 2005
diff -ru heartbeat-2.0.1/lib/plugins/stonith/drac3_hash.c heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_hash.c
--- heartbeat-2.0.1/lib/plugins/stonith/drac3_hash.c	2005-06-08 17:08:40.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_hash.c	2005-09-15 15:45:27.000000000 +0900
@@ -1,110 +1,8 @@
-/* $Id: 01-no-drac3.patch,v 1.1 2005/09/16 08:12:07 horms Exp $ */
-/*
- * Stonith module for Dell DRACIII (Dell Remote Access Card)
- *
- * Copyright (C) 2003 Alfa21 Outsourcing
- * Copyright (C) 2003 Roberto Moreda <moreda@alfa21.com>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- * 
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- * 
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
- */
+REMOVED from Debian because of Openssl Licencing problems.
+Will be readded soon.
+See:
+ http://www.osdl.org/developer_bugzilla/show_bug.cgi?id=853
+ http://lists.community.tummy.com/pipermail/linux-ha-dev/2005-August/011266.html
+ http://www.gnome.org/~markmc/openssl-and-the-gpl.html
 
-#include <portability.h>
-#include <string.h>
-#include <openssl/bio.h>
-#include <openssl/evp.h>
-#include <openssl/md5.h>
-#include <glib.h>
-
-#include "drac3_hash.h"
-
-#define BUFLEN        1024    /* buffer */
-#define SBUFLEN        256    /* small buffer */
-#define MD5LEN          16    /* md5 buffer */
-
-/* Hash functions for DRAC3 authentication */
-
-guint16 
-drac3Crc16(const char *str, 
-	const int l) {
-
-    int i,j;
-    guint16 crc = 0;
-    
-    for (i=0; i<l; i++) {
-        crc = crc ^ (str[i] << 8);
-        for (j=0; j<8; j++)  
-            crc = ( (crc & 0x8000) == 32768 ? (crc<<1) ^ 0x1021 : crc<<1);
-    }    
-    crc = crc & 0xFFFF;
-    return crc;
-}
-
-
-void 
-drac3AuthHash(const char * chall, 
-	const char * pass, 
-	char * token, 
-	int len) {
-        
-    BIO *b64bio, *membio;
-    char challBytes[MD5LEN];
-    char passMD5[MD5LEN];
-    char xorBytes[MD5LEN];
-    char xorBytesMD5[MD5LEN];
-    guint16 crc;
-    char response[MD5LEN+2];
-    char responseb64[SBUFLEN];
-    int i;
-    
-    /* decodes chall -> challBytes */
-    b64bio = BIO_new(BIO_f_base64());
-    membio = BIO_new(BIO_s_mem());
-    b64bio = BIO_push(b64bio, membio);
-    BIO_puts(membio, chall);
-    BIO_flush(b64bio);
-    BIO_read(b64bio, challBytes, MD5LEN);
-
-    /* gets MD5 from pass -> passMD5 */
-    MD5((const unsigned char *)pass, strlen(pass), (unsigned char *)passMD5);
-    
-    /* calculate challBytes and passMD5 xor -> xorBytes */
-    for (i=0; i<MD5LEN; i++) {
-        xorBytes[i] = challBytes[i] ^ passMD5[i];
-    }
-    
-    /* calculate xorBytes MD5 -> xorBytesMD5 */
-    MD5((unsigned char *)xorBytes, MD5LEN, (unsigned char *)xorBytesMD5);
-    
-    /* calculate xorBytesMD5 crc16 */
-    crc = drac3Crc16(xorBytesMD5, MD5LEN);
-    
-    /* joins xorBytesMD5 and crc16 -> response */
-    memcpy(response, xorBytesMD5, MD5LEN);
-    memcpy(response+MD5LEN, &crc, 2);
-    
-    /* calculate response base64 -> responseb64 */
-    BIO_write(b64bio, response, MD5LEN+2);
-    BIO_flush(b64bio);
-    BIO_gets(membio, responseb64, SBUFLEN);
-
-    BIO_free_all(b64bio);
-
-    /* assuring null-termination */
-    responseb64[SBUFLEN-1]=0x00;
-    
-    snprintf(token, len, "%s", responseb64);
-    token[len-1]=0x00;
-}
+Horms -- August 2005
diff -ru heartbeat-2.0.1/lib/plugins/stonith/drac3_hash.h heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_hash.h
--- heartbeat-2.0.1/lib/plugins/stonith/drac3_hash.h	2004-08-30 08:24:21.000000000 +0900
+++ heartbeat-2.0.1.openssl/lib/plugins/stonith/drac3_hash.h	2005-09-15 15:45:27.000000000 +0900
@@ -1,29 +1,8 @@
-/* $Id: 01-no-drac3.patch,v 1.1 2005/09/16 08:12:07 horms Exp $ */
-/*
- * Stonith module for Dell DRACIII (Dell Remote Access Card)
- *
- * Copyright (C) 2003 Alfa21 Outsourcing
- * Copyright (C) 2003 Roberto Moreda <moreda@alfa21.com>
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- * 
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- * 
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
- */
-
-#include <sys/types.h>
-#include <glib.h>
-
-guint16 drac3Crc16(const char *str, const int l);
-void drac3AuthHash(const char *chall, const char *pass, char *token, int len);
+REMOVED from Debian because of Openssl Licencing problems.
+Will be readded soon.
+See:
+ http://www.osdl.org/developer_bugzilla/show_bug.cgi?id=853
+ http://lists.community.tummy.com/pipermail/linux-ha-dev/2005-August/011266.html
+ http://www.gnome.org/~markmc/openssl-and-the-gpl.html
 
+Horms -- August 2005
