#!/bin/sh
# postinst script for heartbeat
#
# see: dh_installdeb(1)

set -e

. /usr/lib/heartbeat/ha_config

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
#

HARCDIR=/etc/heartbeat
HARCLINK=/etc/ha.d
# heartbeat config files
HACF=${HARCDIR}/ha.cf
HACF_TEMPLATE=/usr/share/doc/heartbeat/examples/ha.cf.gz
AKCF=${HARCDIR}/authkeys
AKCF_TEMPLATE=/usr/share/doc/heartbeat/examples/authkeys
HRCF=${HARCDIR}/haresources
HRCF_TEMPLATE=/usr/share/doc/heartbeat/examples/haresources.gz

case "$1" in
    configure)
        if ! getent group "$HA_APIGROUP" > /dev/null ; then
                addgroup --system "$HA_APIGROUP" > /dev/null
        fi
        if ! getent passwd "$HA_CCMUSER" > /dev/null ; then
                adduser --system --no-create-home --shell /bin/false \
                        --ingroup "$HA_APIGROUP" \
			--gecos "Heartbeat System Account" \
                        --disabled-password --disabled-login \
			"$HA_CCMUSER" > /dev/null
        fi

	#
	#casual
	#
	chmod 1770 /var/lib/heartbeat/casual || true
	chgrp "$HA_APIGROUP" /var/lib/heartbeat/casual || true
	#
	#ccm
	#
	chmod 755 /var/lib/heartbeat/ccm || true
	chown "$HA_CCMUSER" /var/lib/heartbeat/ccm || true
	chgrp "$HA_APIGROUP" /var/lib/heartbeat/ccm || true
	chgrp "$HA_APIGROUP" /var/lib/heartbeat/register || true
	#
	#ckpt
	#
	chmod 775 /var/lib/heartbeat/ckpt || true
	chgrp "$HA_APIGROUP" /var/lib/heartbeat/ckpt || true
	#
	#api
	#
	chmod 750 /var/lib/heartbeat/api || true
	chgrp "$HA_APIGROUP" /var/lib/heartbeat/api || true
	
	# Do we want to move the old S20 symlinks to S75 ones?
	if [ -n "$2" ] ; then
          
	  if `dpkg --compare-versions "$2" lt 1.0.4-2`; then
            # use debconf
            . /usr/share/debconf/confmodule
	    db_get heartbeat/change_init || RET="false"
	    if [ "$RET" = "true" ]; then
	      /usr/sbin/update-rc.d -f heartbeat remove > /dev/null
	    fi
            db_stop
	  fi
        fi
	update-rc.d heartbeat start 75 2 3 4 5 . stop 05 0 1 6 . >/dev/null || true

	# test for existence of 'old' config dir and that it's not a symlink
	if [ -d ${HARCLINK} -a ! -L ${HARCLINK} ]; then
	    # files in /etc/ha.d have not been updated in the installation
	    # preserve them
	    mv -f ${HARCLINK}/shellfuncs ${HARCLINK}/shellfuncs.old 2> /dev/null || true
	    mv -f ${HARCLINK}/harc ${HARCLINK}/harc.old 2> /dev/null || true
	    mv -f ${HARCLINK}/rc.d ${HARCLINK}/rc.d.old 2> /dev/null || true
	    mv -f ${HARCLINK}/resource.d ${HARCLINK}/resource.d.old 2> /dev/null || true
            #
	    # move to new location
	    cp -a ${HARCLINK}/* ${HARCDIR}/.
	    rm -rf ${HARCLINK}
	fi

	# create link when it's not already existing
	if [ ! -e ${HARCLINK} ]; then
	    ln -s ${HARCDIR} ${HARCLINK} || true
	fi

	# if config file doesn't exist, copy template file
	if [ ! -e $HACF ]; then
	    gzip -dc $HACF_TEMPLATE > $HACF
	fi
	# if authkey file doesn't exist, copy template file
	if [ ! -e $AKCF ]; then
	    cp $AKCF_TEMPLATE $AKCF
	fi
	# if resource file doesn't exist, copy template file
	if [ ! -e $HRCF ]; then
	    gzip -dc $HRCF_TEMPLATE > $HRCF
	fi

	# make sure that secrets are not traded
	chown root.root ${AKCF}
	chmod 0600 ${AKCF} # asure that it's only readable by root

	ldconfig

	/etc/init.d/heartbeat start || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	# restart heartbeat
	/etc/init.d/heartbeat start || true
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

# vim:set ai et sts=2 sw=2 tw=0:
