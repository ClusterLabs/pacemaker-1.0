#!/bin/sh
#
#
# ids
#
# Description:  
#				Wrapper script for the ids OCF resource agent that
#				manages an IBM Informix Dynamic Server (IDS) 
#				instance as an High-Availability resource.
#
#
# Author:		Lars D. Forseth, <lars.forseth@de.ibm.com> or <lars@forseth.de>
# Created:      May 25th 2007
# Modified:     June 18th 2007
# Support:		linux-ha@lists.linux-ha.org
# License:		GNU General Public License (GPL)
# Copyright:	(C) 2002 - 2007 International Business Machines, Inc.
#
#       		This code is inspired by the db2 and Filesystem wrapper resource scripts
#       		both written by Xun Sun, <xunsun@cn.ibm.com>
#
#
# Example usage as it would appear in /etc/ha.d/haresources:
#       node1 192.168.0.1 ids::/informix::ids1::onconfig.ids1
#
# --> Note that passing dbname and sqltestquery in heartbeat version 1 style is not supported!
#
# See usage() function below for more details...
#


#
# Include variables and functions needed to wrap 
# from heartbeat V1 resource agent style (haresources, no crm) 
# to heartbeat V2 resource agent style (crm, OCF)
#
. @HB_RA_DIR@/hto-mapfuncs


#
# Function that displays the usage of this script.
#
usage() {
	echo "usage: $0 [<INFORMIXDIR> <INFORMIXSERVER> <ONCONFIG>] $LEGAL_ACTIONS"
	exit 1
}


#
# Check if number of parameters is valid
# Valid is 
# 	- 1 parameter (only the action)
# 	- or 4 parameters (variables needed plus the action)
#
if [ $# -ne 1 -a $# -ne 4 ]; then
	usage
fi


#
# Set OCF parameter variables if supplied
#

# set informixdir only if there follows at least one more unempty parameter
if [ -n "$2" ]; then
    OCF_RESKEY_informixdir="$1"; shift
    export OCF_RESKEY_informixdir
fi

# set informixserver only if there follows at least one more unempty parameter
if [ -n "$2" ]; then
    OCF_RESKEY_informixserver="$1"; shift
    export OCF_RESKEY_informixserver
fi

# set onconfig only if there follows at least one more unempty parameter
if [ -n "$2" ]; then
    OCF_RESKEY_onconfig="$1"; shift
    export OCF_RESKEY_onconfig
fi


#
# Set general OCF variables
#
OCF_TYPE=ids
OCF_RESOURCE_INSTANCE=${OCF_TYPE}_$OCF_RESKEY_informixserver
export OCF_TYPE OCF_RESOURCE_INSTANCE


#
# Finally call OCF resource agent...
#
ra_execocf $1
